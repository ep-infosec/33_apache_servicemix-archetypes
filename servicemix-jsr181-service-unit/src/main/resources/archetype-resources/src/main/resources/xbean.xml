<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by Apache ServiceMix Archetype -->
<beans xmlns:jsr181="http://servicemix.apache.org/jsr181/1.0"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
            http://servicemix.apache.org/jsr181/1.0 http://servicemix.apache.org/schema/servicemix-jsr181-@{components.version}.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <!--
        The ServiceMix JSR-181 component exposes (annotated) POJO as services on the bus.
        It uses XFire internally to perform service invocations and XML marshaling.
        It supports:
            - no annotations
            - JSR-181 annotations
            - Commons Attributes annotations
            - Aegis databinding
            - JAXB2 databinding
            - XMLBeans databinding
            - WSDL auto generation
            - MTOM/attachment
            
            http://servicemix.apache.org/servicemix-jsr181.html
    -->

    <!-- BEGIN SNIPPET: jsr181 -->
    <!-- 
        The JSR-181 endpoint exposes the given POJO on the bus.
        
        Attributes:
            service                                 : the endpoint service name
            endpoint                                : the endpoint name
            annotations                             : the annotations used to configure the service. It can be "none", "java5", "jsr181", "commons".
                                                      If not specified, the annotations type will be discovered by looking at the class.
            interfaceName                           : the endpoint interface name
            mtomEnabled                             : enable MTOM/attachment support
            pojo                                    : the instanciated POJO to service requests
            pojoClass                               : the class name of the POJO to service requests
            serviceInterface                        : the class name of the interface to expose as a service
            typeMapping                             : can be "default", "xmlbeans", "jaxb2". Defaults to "default" (Aegis) if no annotations used, else defaults to "jaxb2"
            wsdlResource                            : if set, the WSDL will be retrieved from the given Spring resource
            style                                   : the SOAP style to use (document, wrapped, rpc)
            validationEnabled                       : specifies if the payload should automatically be validated. This feature only works for JAXB 2.0 payloads.                                                                       
    -->
    <jsr181:endpoint pojoClass="${packageName}.ExampleService" />
    <!-- END SNIPPET: jsr181 -->

</beans>
