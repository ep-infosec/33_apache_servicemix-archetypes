<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by Apache ServiceMix Archetype -->
<beans xmlns:mail="http://servicemix.apache.org/mail/1.0"
    xmlns:replaceMe="http://servicemix.apache.org/replaceMe" xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://servicemix.apache.org/mail/1.0 http://servicemix.apache.org/schema/servicemix-mail-@{components.version}.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <!-- 
        The ServiceMix Mail component provides support for receiving and sending mails via the bus.
        
            http://servicemix.apache.org/servicemix-mail.html
    -->

    <!-- BEGIN SNIPPET: mail-poller -->
    <!-- 
        The Mail Poller endpoint connect to a mail server to poll mails, marshal the mail content and send it to the bus.
        
        Attributes:
            service                         : the endpoint service name
            endpoint                        : the endpoint name
            targetService                   : the target endpoint service name
            targetEndpoint                  : the target endpoint name
            connection                      : sets the connection information. The connection URI looks like <protocol>://<user>@<host>[:port][/folder]?password=<password>
                                              For example:
                                                imap://user@hostname:143/INBOX?password=passwd
                                                pop3://hostname/INBOX?user=user;password=passwd
            deleteProcessedMessages         : delete mail from server when it's processed
            processOnlyUnseenMessages       : process only mails which are new (unseen)
            marshaler                       : extends AbstractMailMarshaler to define how to read mail
            maxFetchSize                    : sets max amount of mails to fetch, -1 means no limit
            debugMode                       : sets the debug mode for the JavaMail API
            customTrustManagers             : sets on or more custom trust managers for use with SSL
            storage                         : sets the storage to use for remembering the seen messages when using POP protocol
            period                          : the poller interval (in milliseconds)
            customProperties                : a map of custom properties for the connection
    -->
    <mail:poller service="replaceMe:serviceName" endpoint="mail-poller"
        targetService="replaceMe:targetServiceName"
        targetEndpoint="targetEndpoint"
        period="10000" debugMode="false"
        connection="imap://username@host/INBOX?password=mypass"
        deleteProcessedMessages="false" processOnlyUnseenMessages="true" />
    <!-- END SNIPPET: mail-poller -->  
    
    <!-- BEGIN SNIPPET: mail-sender -->
    <!-- 
        The Mail Sender endpoint gets message from the bus and send mail using message content.
        
        Attributes:
            service                         : the endpoint service name
            endpoint                        : the endpoint name
            sender                          : the sender mail address
            receiver                        : the target mail address
            debugMode                       : sets the debug mode for the JavaMail API
            connection                      : sets the connection information. The connection URI looks like <protocol>://<user>@<host>[:port][/folder]?password=<password>
                                              For example:
                                                imap://user@hostname:143/INBOX?password=passwd
                                                pop3://hostname/INBOX?user=user;password=passwd
            marshaler                       : extends AbstractMailMarshaler to define how to read mail
            ignoreMessageProperties         : a list of properties of the IN message which will be ignored
            customProperties                : a map of custom properties for the connection
            customTrustManagers             : sets one or more custom trust managers for use with SSL                                                            
    -->
    <mail:sender service="replaceMe:serviceName" 
            endpoint="mail-sender"
            sender="no-reply@mycompany.com" 
            receiver="your-static-receiver-address@some-host.com"
            debugMode="false" 
            connection="smtp://username@host?password=mypass" />
    <!-- END SNIPPET: mail-sender -->     

</beans>
