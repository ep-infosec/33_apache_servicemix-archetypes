<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by Apache ServiceMix Archetype -->
<beans xmlns:ftp="http://servicemix.apache.org/ftp/1.0"
    xmlns:replaceMe="http://servicemix.apache.org/replaceMe" xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://servicemix.apache.org/ftp/1.0 http://servicemix.apache.org/schema/servicemix-ftp-@{components.version}.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <!-- 
        The ServiceMix FTP component provides integration to the FTP servers.
        It can be used to read and write files over FTP or to periodically poll
        directories for new files.
        
            http://servicemix.apache.org/servicemix-ftp.html
    -->

    <!-- BEGIN SNIPPET: ftp-poller -->
    <!-- 
        The FTP Poller endpoint can be used to poll a FTP server directory for files, download them,
        and send an InOnly exchange to the configured target service.
        
        Attributes:
            service                 : the endpoint service name
            endpoint                : the endpoint name
            interfaceName           : the endpoint interface name
            targetService           : the target endpoint service name
            targetEndpoint          : the target endpoint name
            targetInterface         : the target endpoint interface name
            targetUri               : the target endpoint URI
            uri                     : the FTP URI to access the FTP server
            autoCreateDirectory     : creates directory if it doesn't exist
            archive                 : sets the directory URI to archive files before deleting them
            deleteFile              : specifies if the file should be deleted from the FTP server after processing
            stateless               : specifies if the polled file should be sent asynchronous or synchronous to the NMR
            recursive               : specifies if subdirectories should be polled
            filter                  : implementation of FileFilter to use
            marshaler               : implementation of FileMarshaler to use to define how the file is read/write
            lockManager             : implementation of LockManager. A custom lock manager can be used to cluster poller endpoints
                                      or to keep track of processed files when the deleteFile attribute is set to false.
            clientPool              : provide specific configuration for the FTP client pool                                      
    -->
    <ftp:poller service="replaceMe:serviceName" endpoint="ftp-poller"
        targetService="replaceMe:serviceName" 
        targetEndpoint="targetEndpoint"
        deleteFile="true"
        uri="ftp://servicemix:rocks@localhost/smx/test" />
    <!-- END SNIPPET: ftp-poller --> 
    
    <!-- BEGIN SNIPPET: ftp-sender -->
    <!-- 
        The FTP Sender endpoint is used as provider endpoint (in the JBI sense) which accepts incoming
        InOnly exchanges and write the content of the exchange to a file on the FTP server.
        
        Attributes:
            service                 : the endpoint service name
            endpoint                : the endpoint name
            interfaceName           : the endpoint interface name
            uri                     : the FTP URI to access the FTP server
            autoCreateDirectory     : creates directory if it doesn't exist
            overwrite               : if a file with the same name already exists on the FTP server, overwrite it
            uniqueFileName          : name used to create unique files when the marshaler can not give a specific file name
            marshaler               : implementation of FileMarshaler to use
            clientPool              : provide specific configuration for the FTP client pool
            uploadSuffix            : the file will be uploaded with this suffix (eg .tmp) and renamed when the upload is complete
    -->
    <ftp:sender service="replaceMe:serviceName" 
                endpoint="ftp-sender"
                uri="ftp://servicemix:rocks@localhost/smx/test" />
    <!-- END SNIPPET: ftp-sender -->       

</beans>
